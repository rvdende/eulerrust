/*
https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

*/

fn fib(n: u128) -> u128 {
    if n <= 0 {
        return 0;
    } else if n == 1 {
        return 1;
    } else {
        return fib(n - 1) + fib(n - 2);
    }
}

fn solve_fib() -> u128 {
    let mut num = 2;
    let mut total: u128 = 0;

    loop {
        let res = fib(num);

        if res > 4_000_000 {
            break;
        }

        print!("{}, ", fib(num));

        if res % 2 == 0 {
            total += res;
        }

        num += 1;
    }

    return total;
}

#[allow(dead_code)]
pub fn run() {
    let res = solve_fib();
    println!("\n{}", res);
}

#[test]
fn test() {
    assert_eq!(solve_fib(), 4613732);
}
